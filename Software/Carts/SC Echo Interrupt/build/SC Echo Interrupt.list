ca65 V2.18 - N/A
Main file   : ./src/SC Echo Interrupt.asm
Current file: ./src/SC Echo Interrupt.asm

000000r 1               .setcpu "65C02"
000000r 1               
000000r 1               .segment "ZEROPAGE"
000000r 1  xx           READ_PTR:     .res 1
000001r 1  xx           WRITE_PTR:    .res 1
000002r 1               
000002r 1               .segment "INPUT_BUFFER"
000000r 1  xx xx xx xx  INPUT_BUFFER: .res $100
000004r 1  xx xx xx xx  
000008r 1  xx xx xx xx  
000100r 1               
000100r 1               .segment "CODE"
000000r 1               
000000r 1               ACIA_DATA   = $9000
000000r 1               ACIA_STATUS = $9001
000000r 1               ACIA_CMD    = $9002
000000r 1               ACIA_CTRL   = $9003
000000r 1               
000000r 1               reset:
000000r 1  78             sei            ; Disable interrupts
000001r 1  A2 FF          ldx #$ff
000003r 1  9A             txs
000004r 1               
000004r 1  A9 00          lda #$00
000006r 1  85 rr          sta READ_PTR
000008r 1  85 rr          sta WRITE_PTR
00000Ar 1               
00000Ar 1  8D 01 90       sta ACIA_STATUS ; Soft reset (value not important)
00000Dr 1               
00000Dr 1  A9 1F          lda #%00011111  ; N-8-1, 19200 baud
00000Fr 1  8D 03 90       sta ACIA_CTRL
000012r 1               
000012r 1  A9 09          lda #%00001001  ; No parity, No echo, RTS low, IRQ Enabled, DTR Ready
000014r 1  8D 02 90       sta ACIA_CMD
000017r 1               
000017r 1  58             cli             ; Enable interrupts
000018r 1               
000018r 1               loop:
000018r 1  20 rr rr       jsr buffer_size   ; Is there a new input?
00001Br 1  F0 FB          beq loop
00001Dr 1  20 rr rr       jsr read_buffer
000020r 1  20 rr rr       jsr send_char
000023r 1  4C rr rr       jmp loop          ; Infinite loop
000026r 1               
000026r 1               ; Write a byte from the A register to the input buffer
000026r 1               ; Modifies: flags, X
000026r 1               write_buffer:
000026r 1  A6 rr          ldx WRITE_PTR
000028r 1  9D rr rr       sta INPUT_BUFFER,x
00002Br 1  E6 rr          inc WRITE_PTR
00002Dr 1  60             rts
00002Er 1               
00002Er 1               ; Read a byte from the input buffer and load into A register
00002Er 1               ; Modifies: flags, X, A
00002Er 1               read_buffer:
00002Er 1  A6 rr          ldx READ_PTR
000030r 1  BD rr rr       lda INPUT_BUFFER,x
000033r 1  E6 rr          inc READ_PTR
000035r 1  60             rts
000036r 1               
000036r 1               ; Return (in A) the number of bytes in the input buffer
000036r 1               ; Modifies: flags, A
000036r 1               buffer_size:
000036r 1  A5 rr          lda WRITE_PTR
000038r 1  38             sec
000039r 1  E5 rr          sbc READ_PTR
00003Br 1  60             rts
00003Cr 1               
00003Cr 1               send_char:
00003Cr 1  8D 00 90       sta ACIA_DATA
00003Fr 1  48             pha
000040r 1               tx_wait:
000040r 1  AD 01 90       lda ACIA_STATUS
000043r 1  29 10          and #%00010000  ; Check if tx buffer not empty
000045r 1  F0 F9          beq tx_wait     ; Loop if tx buffer not empty
000047r 1  68             pla
000048r 1  60             rts
000049r 1               
000049r 1               nmi:
000049r 1               irq:
000049r 1  48             pha
00004Ar 1  DA             phx
00004Br 1  AD 01 90       lda ACIA_STATUS
00004Er 1  29 80          and #%10000000    ; Check if ACIA caused the interrupt
000050r 1  F0 06          beq irq_exit      ; If not, exit
000052r 1  AD 00 90       lda ACIA_DATA     ; Read the data from ACIA
000055r 1  20 rr rr       jsr write_buffer  ; Store to the input buffer
000058r 1               irq_exit:
000058r 1  FA             plx
000059r 1  68             pla
00005Ar 1  40             rti
00005Br 1               
00005Br 1               .segment "VECTORS"
000000r 1               
000000r 1  rr rr          .word nmi
000002r 1  rr rr          .word reset
000004r 1  rr rr          .word irq
000004r 1               
